{
  "manifestVersion": "3.1",
  "impls": {
    "4a142a95993e11af3d6733b48ce827158bc0948fe6099381ae6c9c8f573c8579": {
      "address": "0x393a82Cc6A477D60e0462a084ccFfB54D2128493",
      "txHash": "0x759368a21d29ae0fce05058e17591b02b63efb65ac08469a998fd1b0197bc8e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "Universe",
            "label": "chargedParticles",
            "type": "t_address",
            "src": "contracts/Universe.sol:47"
          },
          {
            "contract": "Universe",
            "label": "ionToken",
            "type": "t_contract(IERC20)636",
            "src": "contracts/Universe.sol:52"
          },
          {
            "contract": "Universe",
            "label": "ionRewardsMultiplier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Universe.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20)636": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "eb9e53cf8b1201c497e60f13628e4f4a33f39b9f8af933d26534a551fe17548a": {
      "address": "0x1e15389690c5a7B93a299C36b5F13dFD284Dda31",
      "txHash": "0xcce31d6a3deda6005d1d16eeec31a9ea2f1a97e829d67887e16fd74c2548cbd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/Initializable.sol:23"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/Initializable.sol:28"
          },
          {
            "contract": "ContextUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol:37"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:18"
          },
          {
            "contract": "OwnableUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/access/Ownable.sol:78"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "_notEntered",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:21"
          },
          {
            "contract": "ReentrancyGuardUpgradeSafe",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol:63"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ChargedParticles",
            "label": "_universe",
            "type": "t_contract(IUniverse)8958",
            "src": "contracts/ChargedParticles.sol:73"
          },
          {
            "contract": "ChargedParticles",
            "label": "_liquidityProviders",
            "type": "t_array(t_string_storage)dyn_storage",
            "src": "contracts/ChargedParticles.sol:74"
          },
          {
            "contract": "ChargedParticles",
            "label": "_lpWalletManager",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IWalletManager)9181)",
            "src": "contracts/ChargedParticles.sol:75"
          },
          {
            "contract": "ChargedParticles",
            "label": "whitelisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ChargedParticles.sol:78"
          },
          {
            "contract": "ChargedParticles",
            "label": "tieredDepositFeeLimits",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/ChargedParticles.sol:92"
          },
          {
            "contract": "ChargedParticles",
            "label": "tieredDepositFee",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/ChargedParticles.sol:93"
          },
          {
            "contract": "ChargedParticles",
            "label": "depositFeesEarned",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/ChargedParticles.sol:96"
          },
          {
            "contract": "ChargedParticles",
            "label": "_nftLiquidityProvider",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/ChargedParticles.sol:102"
          },
          {
            "contract": "ChargedParticles",
            "label": "_nftAssetDepositFee",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ChargedParticles.sol:103"
          },
          {
            "contract": "ChargedParticles",
            "label": "_nftAssetDepositMin",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ChargedParticles.sol:104"
          },
          {
            "contract": "ChargedParticles",
            "label": "_nftAssetDepositMax",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ChargedParticles.sol:105"
          },
          {
            "contract": "ChargedParticles",
            "label": "_creatorAnnuityPercent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedParticles.sol:109"
          },
          {
            "contract": "ChargedParticles",
            "label": "_creatorBurnToRelease",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/ChargedParticles.sol:110"
          },
          {
            "contract": "ChargedParticles",
            "label": "_dischargeApproval",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/ChargedParticles.sol:113"
          },
          {
            "contract": "ChargedParticles",
            "label": "_releaseApproval",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/ChargedParticles.sol:114"
          },
          {
            "contract": "ChargedParticles",
            "label": "_timelockApproval",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/ChargedParticles.sol:115"
          },
          {
            "contract": "ChargedParticles",
            "label": "_dischargeTimelock",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedParticles.sol:117"
          },
          {
            "contract": "ChargedParticles",
            "label": "_releaseTimelock",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedParticles.sol:118"
          },
          {
            "contract": "ChargedParticles",
            "label": "_assetToBeReleasedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/ChargedParticles.sol:119"
          }
        ],
        "types": {
          "t_contract(IUniverse)8958": {
            "label": "contract IUniverse"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IWalletManager)9181)": {
            "label": "mapping(string => contract IWalletManager)"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0x0565780B6e7be4e0c138A19123fD1E5D67e73C1f",
    "txHash": "0x351dcf2c1ddbedc43da0d60c47ba8bea71a7ca6286fba08d7f3e4bde8eddb652"
  }
}
