{
  "manifestVersion": "3.1",
  "impls": {
    "9bde93c42ab3e00981708478ee8ed786562a9d6ec5bdda29202e4d5eecf3f82f": {
      "address": "0x21a681A855928f2bAC91d28dB2Abb49A8FaA1c6e",
      "txHash": "0x23a1e5ac9bd78c8217dda02a9c62f04dd22116d84807441094ae644eacc9d527",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "Universe",
            "label": "chargedParticles",
            "type": "t_address",
            "src": "contracts/Universe.sol:50"
          },
          {
            "contract": "Universe",
            "label": "proton",
            "type": "t_address",
            "src": "contracts/Universe.sol:51"
          },
          {
            "contract": "Universe",
            "label": "lepton",
            "type": "t_address",
            "src": "contracts/Universe.sol:52"
          },
          {
            "contract": "Universe",
            "label": "quark",
            "type": "t_address",
            "src": "contracts/Universe.sol:53"
          },
          {
            "contract": "Universe",
            "label": "boson",
            "type": "t_address",
            "src": "contracts/Universe.sol:54"
          },
          {
            "contract": "Universe",
            "label": "cationMaxSupply",
            "type": "t_uint256",
            "src": "contracts/Universe.sol:59"
          },
          {
            "contract": "Universe",
            "label": "totalCationDischarged",
            "type": "t_uint256",
            "src": "contracts/Universe.sol:60"
          },
          {
            "contract": "Universe",
            "label": "cationSource",
            "type": "t_contract(IERC20Upgradeable)1350",
            "src": "contracts/Universe.sol:63"
          },
          {
            "contract": "Universe",
            "label": "esaMultiplier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Universe.sol:66"
          },
          {
            "contract": "Universe",
            "label": "esaLevel",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/Universe.sol:69"
          },
          {
            "contract": "Universe",
            "label": "referralSource",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/Universe.sol:72"
          },
          {
            "contract": "Universe",
            "label": "bondedLeptonMass",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/Universe.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Upgradeable)1350": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9a9d819f14ab863e8cce6b89a7c0a0e901623634a6fb81c7788dc009646875c2": {
      "address": "0x77602c31773386E31F86449ff2B72A089eA308ba",
      "txHash": "0xbc5feb67fc1e4dbd5678082d3719f9a60a259cb5264915aa5dc782ad2ad98239",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ChargedState",
            "label": "_chargedSettings",
            "type": "t_contract(IChargedSettings)13544",
            "src": "contracts/ChargedState.sol:76"
          },
          {
            "contract": "ChargedState",
            "label": "_nftState",
            "type": "t_mapping(t_uint256,t_struct(NftState)10236_storage)",
            "src": "contracts/ChargedState.sol:79"
          }
        ],
        "types": {
          "t_contract(IChargedSettings)13544": {
            "label": "contract IChargedSettings"
          },
          "t_mapping(t_uint256,t_struct(NftState)10236_storage)": {
            "label": "mapping(uint256 => struct ChargedState.NftState)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(NftState)10236_storage": {
            "label": "struct ChargedState.NftState",
            "members": [
              {
                "label": "actionPerms",
                "type": "t_uint32"
              },
              {
                "label": "dischargeTimelock",
                "type": "t_uint256"
              },
              {
                "label": "releaseTimelock",
                "type": "t_uint256"
              },
              {
                "label": "breakBondTimelock",
                "type": "t_uint256"
              },
              {
                "label": "tempLockExpiry",
                "type": "t_uint256"
              },
              {
                "label": "dischargeApproval",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "label": "releaseApproval",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "label": "breakBondApproval",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "label": "timelockApproval",
                "type": "t_mapping(t_address,t_address)"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c9797cb4e958e913632a7d958938c60d928b0d01734748a046acec1810d486e1": {
      "address": "0x42C131a651473923a8da3FbDa482497B341A652b",
      "txHash": "0x6356d8f91f80db23b24870859fd84ac18033b4c89a581ead034b1d18f90f6c2c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ChargedSettings",
            "label": "_depositCap",
            "type": "t_uint256",
            "src": "contracts/ChargedSettings.sol:88"
          },
          {
            "contract": "ChargedSettings",
            "label": "_tempLockExpiryBlocks",
            "type": "t_uint256",
            "src": "contracts/ChargedSettings.sol:89"
          },
          {
            "contract": "ChargedSettings",
            "label": "_ftWalletManager",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IWalletManager)14942)",
            "src": "contracts/ChargedSettings.sol:92"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftBasketManager",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IBasketManager)13011)",
            "src": "contracts/ChargedSettings.sol:93"
          },
          {
            "contract": "ChargedSettings",
            "label": "_creatorSettings",
            "type": "t_mapping(t_uint256,t_struct(CreatorSettings)8894_storage)",
            "src": "contracts/ChargedSettings.sol:96"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftSettings",
            "type": "t_mapping(t_address,t_struct(NftSettings)8889_storage)",
            "src": "contracts/ChargedSettings.sol:99"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IWalletManager)14942)": {
            "label": "mapping(string => contract IWalletManager)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IWalletManager)14942": {
            "label": "contract IWalletManager"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IBasketManager)13011)": {
            "label": "mapping(string => contract IBasketManager)"
          },
          "t_contract(IBasketManager)13011": {
            "label": "contract IBasketManager"
          },
          "t_mapping(t_uint256,t_struct(CreatorSettings)8894_storage)": {
            "label": "mapping(uint256 => struct ChargedSettings.CreatorSettings)"
          },
          "t_struct(CreatorSettings)8894_storage": {
            "label": "struct ChargedSettings.CreatorSettings",
            "members": [
              {
                "label": "annuityPercent",
                "type": "t_uint256"
              },
              {
                "label": "annuityRedirect",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(NftSettings)8889_storage)": {
            "label": "mapping(address => struct ChargedSettings.NftSettings)"
          },
          "t_struct(NftSettings)8889_storage": {
            "label": "struct ChargedSettings.NftSettings",
            "members": [
              {
                "label": "actionPerms",
                "type": "t_uint32"
              },
              {
                "label": "requiredWalletManager",
                "type": "t_string_storage"
              },
              {
                "label": "requiredBasketManager",
                "type": "t_string_storage"
              },
              {
                "label": "allowedAssetTokens",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "depositMin",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "depositMax",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "label": "maxNfts",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fb1c370c33b9f377351b11e34edbf19f5534638a0ae7d6de84b15605831e8898": {
      "address": "0xb2Badf71F58D0bbcDD049c574e832eA9b2400d71",
      "txHash": "0xdbe9e098494b1e6f997503abb7c4aa62474c64b8021eeeb6e90bcb8669f6ad13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ChargedParticles",
            "label": "_universe",
            "type": "t_contract(IUniverse)14603",
            "src": "contracts/ChargedParticles.sol:89"
          },
          {
            "contract": "ChargedParticles",
            "label": "_chargedState",
            "type": "t_contract(IChargedState)13919",
            "src": "contracts/ChargedParticles.sol:90"
          },
          {
            "contract": "ChargedParticles",
            "label": "_chargedSettings",
            "type": "t_contract(IChargedSettings)13544",
            "src": "contracts/ChargedParticles.sol:91"
          }
        ],
        "types": {
          "t_contract(IUniverse)14603": {
            "label": "contract IUniverse"
          },
          "t_contract(IChargedState)13919": {
            "label": "contract IChargedState"
          },
          "t_contract(IChargedSettings)13544": {
            "label": "contract IChargedSettings"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a41d0b31403254ff8acd9575c7e336e910fe42bc4075e3bbb737408d0a2e4d9a": {
      "address": "0xa84F46D86540C79Cbdd974deFcb35427aaAf9797",
      "txHash": "0x6031216c62946fac034bc8b5862265df63b28abe955c47475e74cf37fca29e13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "Photon",
            "label": "_photonURIs",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/tokens/Photon.sol:41"
          }
        ],
        "types": {
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_address": {
            "label": "address"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xDA9d5062Bd8B652d1863557bABF7BB04070e35FA",
    "txHash": "0x20fc7e82e8409af7b627f0eb423cab6f70d793c8732fcb18c972d5f9456668f7"
  }
}
