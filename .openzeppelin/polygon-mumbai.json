{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x315Ede01442c50af2F201A01C7f364eF54503d66",
    "txHash": "0x178a1a123253d11d96948ae744b855081e76fafa697d2a033de51718107cf87e"
  },
  "proxies": [
    {
      "address": "0x8269B6850F557D8654D2416850740f6DeF75D8F2",
      "txHash": "0xc5d21331215eea51674a4c84b524bca961b643138524ff61e1a9dbd85f1c8bd4",
      "kind": "transparent"
    },
    {
      "address": "0x581c57b86fC8c2D639f88276478324cE1380979D",
      "txHash": "0x0f49c660e36ef17032d38c376e93c2441ab1d70b1f441098d15c1f31efe960f8",
      "kind": "transparent"
    },
    {
      "address": "0x60428D3e580907C74Ee8690E4E192317864aAE1d",
      "txHash": "0x05114ef54e2634068f4b6619243a38739833e8f06312c551a66fba5a4ef1d65a",
      "kind": "transparent"
    },
    {
      "address": "0xE8c6462ceEeeC3f8c318e29Af143f623de979D69",
      "txHash": "0xb42198488387740207375aa727e71c0f849ad1d0e3324bfb23ccff39fc4fc343",
      "kind": "transparent"
    },
    {
      "address": "0x51f845af34c60499a1056FCDf47BcBC681A0fA39",
      "txHash": "0xe9884313d6e787b4a819d9a978e8c9f4f75d589b48e488925660a22dceddd06d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "3a5d836982e044a414f93d1ab86df5895a60df1608f8a8c2af540ecaf0a2ace8": {
      "address": "0x040Ed5D35F2eC411CBC445C730f6D7D8cb0AA759",
      "txHash": "0xa8dc49baeacce5c0cbe961e836ce1071f2cae534f7eeb8f66b9120f6256e41f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ChargedState",
            "label": "_chargedSettings",
            "type": "t_contract(IChargedSettings)4559",
            "src": "contracts/ChargedState.sol:59"
          },
          {
            "contract": "ChargedState",
            "label": "_tokenInfoProxy",
            "type": "t_contract(ITokenInfoProxy)5128",
            "src": "contracts/ChargedState.sol:60"
          },
          {
            "contract": "ChargedState",
            "label": "_nftDischargeTimelockUnlockBlock",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedState.sol:64"
          },
          {
            "contract": "ChargedState",
            "label": "_nftDischargeTimelockLockedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/ChargedState.sol:65"
          },
          {
            "contract": "ChargedState",
            "label": "_nftReleaseTimelockUnlockBlock",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedState.sol:68"
          },
          {
            "contract": "ChargedState",
            "label": "_nftReleaseTimelockLockedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/ChargedState.sol:69"
          },
          {
            "contract": "ChargedState",
            "label": "_nftBreakBondTimelockUnlockBlock",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedState.sol:72"
          },
          {
            "contract": "ChargedState",
            "label": "_nftBreakBondTimelockLockedBy",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/ChargedState.sol:73"
          },
          {
            "contract": "ChargedState",
            "label": "_nftActionPerms",
            "type": "t_mapping(t_uint256,t_uint32)",
            "src": "contracts/ChargedState.sol:77"
          },
          {
            "contract": "ChargedState",
            "label": "_nftTempLockExpiry",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedState.sol:80"
          },
          {
            "contract": "ChargedState",
            "label": "_nftDischargeApproval",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/ChargedState.sol:83"
          },
          {
            "contract": "ChargedState",
            "label": "_nftReleaseApproval",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/ChargedState.sol:84"
          },
          {
            "contract": "ChargedState",
            "label": "_nftBreakBondApproval",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/ChargedState.sol:85"
          },
          {
            "contract": "ChargedState",
            "label": "_nftTimelockApproval",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/ChargedState.sol:86"
          }
        ],
        "types": {
          "t_contract(IChargedSettings)4559": {
            "label": "contract IChargedSettings"
          },
          "t_contract(ITokenInfoProxy)5128": {
            "label": "contract ITokenInfoProxy"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint32)": {
            "label": "mapping(uint256 => uint32)"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e30860ec37fbbce92fae580f2271cf364d07d549a1c658edaccf2fbd192c1e5b": {
      "address": "0xf3CbB49054Bd2479547fA6E2D855fa56D5CFb46E",
      "txHash": "0x0548c86754c27fde41f7fc59f0f17526fcc8915d19e2fa5f02e6a29dd68419af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ChargedSettings",
            "label": "_tokenInfoProxy",
            "type": "t_contract(ITokenInfoProxy)4080",
            "src": "contracts/ChargedSettings.sol:63"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftActionPerms",
            "type": "t_mapping(t_address,t_uint32)",
            "src": "contracts/ChargedSettings.sol:69"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftRequiredWalletManager",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/ChargedSettings.sol:71"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftRequiredBasketManager",
            "type": "t_mapping(t_address,t_string_storage)",
            "src": "contracts/ChargedSettings.sol:72"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftAllowedAssetTokens",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "contracts/ChargedSettings.sol:75"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftDepositMin",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/ChargedSettings.sol:76"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftDepositMax",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/ChargedSettings.sol:77"
          },
          {
            "contract": "ChargedSettings",
            "label": "_nftMaxNfts",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/ChargedSettings.sol:80"
          },
          {
            "contract": "ChargedSettings",
            "label": "_creatorAnnuityPercent",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/ChargedSettings.sol:83"
          },
          {
            "contract": "ChargedSettings",
            "label": "_creatorAnnuityRedirect",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "contracts/ChargedSettings.sol:84"
          },
          {
            "contract": "ChargedSettings",
            "label": "_depositCap",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/ChargedSettings.sol:86"
          },
          {
            "contract": "ChargedSettings",
            "label": "_tempLockExpiryBlocks",
            "type": "t_uint256",
            "src": "contracts/ChargedSettings.sol:87"
          },
          {
            "contract": "ChargedSettings",
            "label": "_invalidAssets",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/ChargedSettings.sol:90"
          }
        ],
        "types": {
          "t_contract(ITokenInfoProxy)4080": {
            "label": "contract ITokenInfoProxy"
          },
          "t_mapping(t_address,t_uint32)": {
            "label": "mapping(address => uint32)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "68ae1060fe0bf3b2875be4a20663c5abe2952eb30bbda1a9498b1acee778641e": {
      "address": "0x8ED5019123E266eBB488c3f7462a0dc068Df45d5",
      "txHash": "0xe3215fd35f6a032d1f9da6cd0999d82909929cb5c162aa72730e986c3af131a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ChargedManagers",
            "label": "_chargedSettings",
            "type": "t_contract(IChargedSettings)3472",
            "src": "contracts/ChargedManagers.sol:50"
          },
          {
            "contract": "ChargedManagers",
            "label": "_chargedState",
            "type": "t_contract(IChargedState)3871",
            "src": "contracts/ChargedManagers.sol:51"
          },
          {
            "contract": "ChargedManagers",
            "label": "_tokenInfoProxy",
            "type": "t_contract(ITokenInfoProxy)4041",
            "src": "contracts/ChargedManagers.sol:52"
          },
          {
            "contract": "ChargedManagers",
            "label": "_ftWalletManager",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IWalletManager)4401)",
            "src": "contracts/ChargedManagers.sol:55"
          },
          {
            "contract": "ChargedManagers",
            "label": "_nftBasketManager",
            "type": "t_mapping(t_string_memory_ptr,t_contract(IBasketManager)3049)",
            "src": "contracts/ChargedManagers.sol:56"
          }
        ],
        "types": {
          "t_contract(IChargedSettings)3472": {
            "label": "contract IChargedSettings"
          },
          "t_contract(IChargedState)3871": {
            "label": "contract IChargedState"
          },
          "t_contract(ITokenInfoProxy)4041": {
            "label": "contract ITokenInfoProxy"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IWalletManager)4401)": {
            "label": "mapping(string => contract IWalletManager)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_contract(IWalletManager)4401": {
            "label": "contract IWalletManager"
          },
          "t_mapping(t_string_memory_ptr,t_contract(IBasketManager)3049)": {
            "label": "mapping(string => contract IBasketManager)"
          },
          "t_contract(IBasketManager)3049": {
            "label": "contract IBasketManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4276336de20a2c07c6a08776c638acc74ea413d47ae67dc0aaf8947e5c500935": {
      "address": "0x88DE7B0a9695C1F9072ECC4a57a738Dad2f537D2",
      "txHash": "0xd20d783e437ba30c942b3749592e2e984a48aa917d5b570d805aa5acb72c7308",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseRelayRecipient",
            "label": "trustedForwarder",
            "type": "t_address",
            "src": "@opengsn/gsn/contracts/BaseRelayRecipient.sol:16"
          },
          {
            "contract": "ChargedParticles",
            "label": "_universe",
            "type": "t_contract(IUniverse)5814",
            "src": "contracts/ChargedParticles.sol:95"
          },
          {
            "contract": "ChargedParticles",
            "label": "_chargedState",
            "type": "t_contract(IChargedState)5570",
            "src": "contracts/ChargedParticles.sol:96"
          },
          {
            "contract": "ChargedParticles",
            "label": "_chargedSettings",
            "type": "t_contract(IChargedSettings)5171",
            "src": "contracts/ChargedParticles.sol:97"
          },
          {
            "contract": "ChargedParticles",
            "label": "_lepton",
            "type": "t_address",
            "src": "contracts/ChargedParticles.sol:98"
          },
          {
            "contract": "ChargedParticles",
            "label": "depositFee",
            "type": "t_uint256",
            "src": "contracts/ChargedParticles.sol:99"
          },
          {
            "contract": "ChargedParticles",
            "label": "_tokenInfoProxy",
            "type": "t_contract(ITokenInfoProxy)5649",
            "src": "contracts/ChargedParticles.sol:100"
          },
          {
            "contract": "ChargedParticles",
            "label": "_chargedManagers",
            "type": "t_contract(IChargedManagers)4632",
            "src": "contracts/ChargedParticles.sol:101"
          }
        ],
        "types": {
          "t_contract(IUniverse)5814": {
            "label": "contract IUniverse"
          },
          "t_contract(IChargedState)5570": {
            "label": "contract IChargedState"
          },
          "t_contract(IChargedSettings)5171": {
            "label": "contract IChargedSettings"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ITokenInfoProxy)5649": {
            "label": "contract ITokenInfoProxy"
          },
          "t_contract(IChargedManagers)4632": {
            "label": "contract IChargedManagers"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
